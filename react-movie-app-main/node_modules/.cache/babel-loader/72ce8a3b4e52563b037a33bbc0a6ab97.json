{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\PROG\\\\exercicios\\\\PROJETO 2\\\\Appmovie\\\\react-movie-app-main\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect } from 'react';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import './App.css';\n// import MovieList from './components/MovieList';\n// import MovieListHeading from './components/MovieListHeading';\n// import SearchBox from './components/SearchBox';\n// import AddFavourites from './components/AddFavourites';\n// import RemoveFavourites from './components/RemoveFavourites';\nimport React from \"react\";\nimport { Main } from \"./pages/Main\";\n\nconst App = () => {\n  _s();\n\n  //primeiro useState segura o resultado que voltam da search search\n  const [movies, setMovies] = useState([]);\n  const [favourites, setFavourites] = useState([]);\n  const [searchValue, setSearchValue] = useState(''); //o getMovieRequest pega o nosso SearchValue e pede para a api e nos pegamos a respota convertemos para json e se nos tivemos algum resultado de pesquisa nos ficaremos coma função if \n\n  const getMovieRequest = async searchValue => {\n    const url = `http://www.omdbapi.com/?s=${searchValue}&apikey=d3f77329`; //quando o fetch acontecer ele vai guardar no var response, e responder um objeto que criamos com a busca\n\n    const response = await fetch(url); //aqui ele converte o http para json \n\n    const responseJson = await response.json(); //criamos a função if para não dar bug e chamar o useState só quando tiver um valor na searchBox\n    //.Search é a array onde contem os filmes quando pesquisamos na API\n\n    if (responseJson.Search) {\n      setMovies(responseJson.Search);\n    }\n  }; //Para chamarmos a função getMovieRequest nós criamos um useEffect\n  //quando o app inicia o useEffect é iniciado\n  //chama o getMovierequest passando nosso valor do SearchValue que é uma string vazia\n  //quando o usuario escreve o SetSerachValue é chamado\n\n\n  useEffect(() => {\n    getMovieRequest(searchValue);\n  }, [searchValue]);\n  useEffect(() => {\n    const movieFavourites = JSON.parse(localStorage.getItem('react-movie-app-favourites'));\n\n    if (movieFavourites) {\n      setFavourites(movieFavourites);\n    }\n  }, []);\n\n  const saveToLocalStorage = items => {\n    localStorage.setItem('react-movie-app-favourites', JSON.stringify(items));\n  };\n\n  const addFavouriteMovie = movie => {\n    const newFavouriteList = [...favourites, movie];\n    setFavourites(newFavouriteList);\n    saveToLocalStorage(newFavouriteList);\n  };\n\n  const removeFavouriteMovie = movie => {\n    const newFavouriteList = favourites.filter(favourite => favourite.imdbID !== movie.imdbID);\n    setFavourites(newFavouriteList);\n    saveToLocalStorage(newFavouriteList);\n  }; //os filmes que nos temos são mandados para o coimponente da MovieList\n  //container-fluid é so um container od bootstrap\n  //criamos a classe movie-app pois os filmes não continuavam na mesma linha e quando diminuiamos a pagina ele ia pra baixo \n  //Oque temos que fazer com o valor dentro da serch é, guardar ele dentro do searchValue State e toda vez que isso mudar nós iremos chamar o getmovierequest, a primeira coisa que temos que fazer é passar o searchValue e o SetSearchValue para nossa searchBox e puxar ele para a area do input\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid movie-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex align-items-center mt-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(MovieListHeading, {\n        heading: \"Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchValue: searchValue,\n        setSearchValue: setSearchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: movies,\n        handleFavouritesClick: addFavouriteMovie,\n        favouriteComponent: AddFavourites\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex align-items-center mt-4 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(MovieListHeading, {\n        heading: \"Favourites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: favourites,\n        handleFavouritesClick: removeFavouriteMovie,\n        favouriteComponent: RemoveFavourites\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"4P04SX5B1R/InGa2hj0yghhYU+w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/PROG/exercicios/PROJETO 2/Appmovie/react-movie-app-main/src/App.js"],"names":["React","Main","App","movies","setMovies","useState","favourites","setFavourites","searchValue","setSearchValue","getMovieRequest","url","response","fetch","responseJson","json","Search","useEffect","movieFavourites","JSON","parse","localStorage","getItem","saveToLocalStorage","items","setItem","stringify","addFavouriteMovie","movie","newFavouriteList","removeFavouriteMovie","filter","favourite","imdbID","AddFavourites","RemoveFavourites"],"mappings":"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","sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import './App.css';\r\n// import MovieList from './components/MovieList';\r\n// import MovieListHeading from './components/MovieListHeading';\r\n// import SearchBox from './components/SearchBox';\r\n// import AddFavourites from './components/AddFavourites';\r\n// import RemoveFavourites from './components/RemoveFavourites';\r\nimport React from \"react\";\r\nimport { Main } from \"./pages/Main\";\r\n\r\nconst App = () => {\r\n\t//primeiro useState segura o resultado que voltam da search search\r\n\tconst [movies, setMovies] = useState([]);\r\n\tconst [favourites, setFavourites] = useState([]);\r\n\tconst [searchValue, setSearchValue] = useState('');\r\n\r\n//o getMovieRequest pega o nosso SearchValue e pede para a api e nos pegamos a respota convertemos para json e se nos tivemos algum resultado de pesquisa nos ficaremos coma função if \r\n\tconst getMovieRequest = async (searchValue) => {\r\n\t\tconst url = `http://www.omdbapi.com/?s=${searchValue}&apikey=d3f77329`;\r\n\t\t\r\n\t\t//quando o fetch acontecer ele vai guardar no var response, e responder um objeto que criamos com a busca\r\n\t\tconst response = await fetch(url);\r\n\t\t//aqui ele converte o http para json \r\n\t\tconst responseJson = await response.json();\r\n\r\n\t\t//criamos a função if para não dar bug e chamar o useState só quando tiver um valor na searchBox\r\n\t\t//.Search é a array onde contem os filmes quando pesquisamos na API\r\n\t\tif (responseJson.Search) {\r\n\t\t\tsetMovies(responseJson.Search);\r\n\t\t}\r\n\t};\r\n\r\n\t//Para chamarmos a função getMovieRequest nós criamos um useEffect\r\n\t//quando o app inicia o useEffect é iniciado\r\n\t//chama o getMovierequest passando nosso valor do SearchValue que é uma string vazia\r\n\t\r\n\t//quando o usuario escreve o SetSerachValue é chamado\r\n\tuseEffect(() => {\r\n\t\tgetMovieRequest(searchValue);\r\n\t}, [searchValue]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst movieFavourites = JSON.parse(\r\n\t\t\tlocalStorage.getItem('react-movie-app-favourites')\r\n\t\t);\r\n\r\n\t\tif (movieFavourites) {\r\n\t\t\tsetFavourites(movieFavourites);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst saveToLocalStorage = (items) => {\r\n\t\tlocalStorage.setItem('react-movie-app-favourites', JSON.stringify(items));\r\n\t};\r\n\r\n\tconst addFavouriteMovie = (movie) => {\r\n\t\tconst newFavouriteList = [...favourites, movie];\r\n\t\tsetFavourites(newFavouriteList);\r\n\t\tsaveToLocalStorage(newFavouriteList);\r\n\t};\r\n\r\n\tconst removeFavouriteMovie = (movie) => {\r\n\t\tconst newFavouriteList = favourites.filter(\r\n\t\t\t(favourite) => favourite.imdbID !== movie.imdbID\r\n\t\t);\r\n\r\n\t\tsetFavourites(newFavouriteList);\r\n\t\tsaveToLocalStorage(newFavouriteList);\r\n\t};\r\n\r\n\t//os filmes que nos temos são mandados para o coimponente da MovieList\r\n\t//container-fluid é so um container od bootstrap\r\n\t//criamos a classe movie-app pois os filmes não continuavam na mesma linha e quando diminuiamos a pagina ele ia pra baixo \r\n\t//Oque temos que fazer com o valor dentro da serch é, guardar ele dentro do searchValue State e toda vez que isso mudar nós iremos chamar o getmovierequest, a primeira coisa que temos que fazer é passar o searchValue e o SetSearchValue para nossa searchBox e puxar ele para a area do input\r\n\treturn (\r\n\t\t<div className='container-fluid movie-app'>\r\n\t\t\t<div className='row d-flex align-items-center mt-4 mb-4'>\r\n\t\t\t\t<MovieListHeading heading='Movies' />\r\n\t\t\t\t<SearchBox searchValue={searchValue} setSearchValue={setSearchValue} />\r\n\t\t\t</div>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<MovieList\r\n\t\t\t\t\tmovies={movies}\r\n\t\t\t\t\thandleFavouritesClick={addFavouriteMovie}\r\n\t\t\t\t\tfavouriteComponent={AddFavourites}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='row d-flex align-items-center mt-4 mb-4'>\r\n\t\t\t\t<MovieListHeading heading='Favourites' />\r\n\t\t\t</div>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<MovieList\r\n\t\t\t\t\tmovies={favourites}\r\n\t\t\t\t\thandleFavouritesClick={removeFavouriteMovie}\r\n\t\t\t\t\tfavouriteComponent={RemoveFavourites}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}